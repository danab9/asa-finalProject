configfile : "config/config.yaml"
import pandas as pd

samples = pd.read_csv(config["samples"], index_col="sample", sep ='\t')
IDS = [s for s in list(samples.index)]
#short_samples = pd.read_csv(config["samples"]["short_reads"],index_col="sample", sep ='\t')
#IDs = [s for s in list(short_samples.index)]
#long_samples = pd.read_csv(config["samples"]["long_reads"],index_col="sample", sep ='\t')

wildcard_constraints:
    sample = config["regular_expression"]

include: "rules/assembly.smk"
include: "rules/decontamination.smk"
include: "rules/analysis.smk"
include: "rules/qc.smk"
include: "rules/phylogenetics.smk"
include: "rules/pangenome.smk"
include: "rules/annotation.smk"


rule all:
    input: 
        table =  "results/pangenome.txt",
        # genomes = expand("results/genomes/{sample}.fasta",sample=IDS),
        # assembly = "results/assembly/ERR4082859/assembly.fasta",
        # decontaminated_long = "results/fastq/decontaminated/long/ERR4082859.fq", 
        # screen = "results/report/kraken/multiqc_report.html" if (config["screening"]["short"] == "True" or config["screening"]["long"] == "True") else [],
        # quast = "results/qc/assembly/{sample}/report.txt"


